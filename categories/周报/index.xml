<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>周报 on 剪径小贼</title><link>/categories/%E5%91%A8%E6%8A%A5/</link><description>Recent content in 周报 on 剪径小贼</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="/categories/%E5%91%A8%E6%8A%A5/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekly-20191201</title><link>/weekly/2019/12/01-weekly-20191201/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>/weekly/2019/12/01-weekly-20191201/</guid><description>挑了一上周下载的 Operating Systems: Three easy pieces 1. 这次尝试不用翻译阅读，起初看地比较吃力，后来觉得越来越顺畅了。这本书从虚拟化、并发和持久化三个方面介绍，这种结构更容易把知识打穿，也是我选择这本书的原因。读了7个 chapter 也发现了几个问题，和群里的朋友们探讨了一下：
Q1: 获取系统时间(gettimeofday())是否会进行系统调用？ Switching Between Processes A Non-Cooperative Approach: The OS Takes Control
A timer device can be programmed to raise an interrupt every so many milliseconds; when the interrupt is raised, the currently running process is halted, and a pre-conﬁgured interrupt handler in the OS runs. At this point, the OS has regained control of the CPU, and thus can do what it pleases: stop the current process, and start a different one.</description></item><item><title>Weekly-20191124</title><link>/weekly/2019/11/24-weekly-20191124/</link><pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate><guid>/weekly/2019/11/24-weekly-20191124/</guid><description> 之前实习的时候写过一段时间的周报，最近觉得需要记录一下自己的生活和学习的过程，避免过地无所事事。所以在今天专门在博客上开了一个周报的 tab，这便是我个人的第一个周报，或者说是周记。
电脑终于到了，是19款13&amp;rdquo; 16+512的，新出的16&amp;rdquo;低配也是16+512套餐，看了看钱包只能安慰自己是为了便携度放弃了16&amp;rdquo;。
折腾了三年多，最后还是迁回 Hugo1 搭建博客，之前一直使用 Travis CI2 做 CD，但是很久没用遇到了 Travis 中 Hugo 下载失败的问题。联想 GitHub Actions 上线不久，调研了相关的静态博客方案后选择了 Hugo + GitHub Pages + GitHub Actions 的方案。参照 hugo-xmin3 主题加入代码高亮4和 disqus5 评论，修改了一些样式，最后完成了你现在所在的这个站点6。
完成了一家公司的二面，起初电话没有听清是哪家公司，后来询问业务才想起只有一家投递了这个部门。有两个多月没有面试过了，一些常见的面试题也忘得差不多。平时能展开滔滔不绝的问题也被面试官问：“你面试别的公司说话也这么简短吗”？其实这些问题根本算不上难，背一些面经也可以回答上来。对我来说合理的面试内容应该是深入挖掘底层基础，一些依靠背诵或阅读几篇文章就能达到同样效果的问题确实让人头疼。身边有相当一部分朋友后悔学习计算机相关专业，我深切地理解这种做着不感兴趣的事的无力感，同时也庆幸自己对计算机科学及行业的热爱。四年间接触过一些能力极强的朋友，不得让感慨：真正的大神还是兴趣驱动，而没有任何功利的想法。 图1，本科期间的一部分计算机相关书籍
在网上7下了不少的英文原版 pdf，起初是为了看 DDIA8 这本书，后来由于收集癖好将所有计算机方面的经典书籍都下了一遍放在 icloud 上。
胸口不舒服有一周了，周日去医院看了看，片子拍出来后大夫告知是熬夜导致的。以后不能熬夜了，待恢复几天后也要加强锻炼。
https://gohugo.io/ ↩ http://travis-ci.org/ ↩ https://github.com/yihui/hugo-xmin ↩ https://highlightjs.org ↩ https://disqus.com/ ↩ https://arjenzhou.github.io ↩ https://www.pdfdrive.com ↩ https://www.amazon.com/gp/product/1449373321/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=dataintensive-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1449373321&amp;amp;linkId=7b365b768a6f6c8e5e397e48e30d435e ↩</description></item></channel></rss>